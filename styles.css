* {
  box-sizing: border-box;
}

html {
  --color-primary: #FF2E00;
  --color-secondary: #FBC8A6;
  --color-dark: #211103;
  --color-light: #FFFFFF;

  background: var(--color-light);
}

body {
  max-width: 1920px;
  margin: 0 auto;
  font-family: Rubik, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  color: var(--color-dark);
  font-size: 14px;
  line-height: 16px;
}

header {
  display: grid;
  justify-content: end;
  grid-auto-flow: column;
  grid-gap: 16px;
  padding: 16px;
}

header svg {
  display: block;
  width: 32px;
  height: 32px;
  fill: var(--color-dark);
}

.dark-mode {
  background: none;
  border: none;
  padding: 0;
}

main {
  display: grid;
  grid-template-rows: auto min(480px, calc(100vh - 64px)) auto;
  justify-items: center;
  grid-gap: 64px;
  max-width: 1448px;
  margin: 0 auto;
  padding: 32px;
  padding-top: 16px;
  padding-bottom: 64px;
}

@media screen and (min-width: 640px) {
  main {
    grid-gap: 48px;
  }
}

@media screen and (min-width: 1024px) {
  main {
    grid-template-rows: min(648px, calc(100vh - 32px));
    grid-template-columns: 272px 1fr 272px;
    align-items: start;
    justify-content: stretch;
    grid-gap: 0;
    padding: 64px 72px;
  }
}

aside {
  position: relative;
  width: 100%;
  height: 100%;
}

.aside__scroll {
  width: 100%;
  max-width: 376px;
  max-height: 100%;
  margin: 0 auto;
}

@media screen and (min-width: 1024px) {
  .aside__scroll {
    max-width: 276px;
    overflow-y: auto;
  }
}

.aside__content {
  display: grid;
  grid-auto-flow: row;
  align-items: center;
  align-content: start;
  grid-gap: 32px;
}

@media screen and (min-width: 1024px) {
  .aside__content {
    padding: 32px;
  }
}

/*
 * The before and after pseudo elements are meant to be positioned on top of the
 * padding of their container.
 * The idea is to create a fade effect for overflowing content, to indicate that
 * there is more content and to make the transition less harsh.
*/
aside::before, aside::after {
  display: none;
  position: absolute;
  left: 0;
  right: 0;
  height: 32px; /* should be the same as bottom padding of container */
  z-index: 1;
}

@media screen and (min-width: 1024px) {
  /* The fade is only needed on desktop, because on mobile the container grows to fit */
  aside::before, aside::after {
    display: block;
  }
}

aside::before {
  content: linear-gradient(to bottom, var(--color-light), rgba(0, 0, 0, 0));
  top: 0;
}

aside::after {
  content: linear-gradient(to top, var(--color-light), rgba(0, 0, 0, 0));
  bottom: 0;
}

section {
  align-self: stretch;
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  width: 100%;
}

@media screen and (min-width: 640px) {
  section {
    padding: 64px;
  }
}

@media screen and (max-width: 640px) {
  section.tube {
    border: none;
  }
}

section .barplot {
  flex-grow: 1;
  max-width: 560px;
}

.group {
  display: grid;
  grid-auto-flow: row;
  grid-gap: 16px;
}

.group__bottom-text {
  display: grid;
  grid-auto-flow: row;
  grid-gap: 8px;
}

.running-time span {
  display: inline-block;
}

.algo-config {
  display: grid;
  grid-auto-flow: row;
  grid-gap: 8px;
}

.inline-input {
  display: grid;
  justify-content: start;
  align-items: center;
  grid-auto-flow: column;
  grid-gap: 8px;
}

.inline-input__label {
  display: flex;
  flex-wrap: nowrap;
  align-items: center;
  text-transform: none;
  font-weight: 600;
  letter-spacing: 2px;
}

.inline-input__label span {
  margin-left: 8px;
}

.job-inputs {
  display: grid;
  grid-auto-flow: row;
  grid-template-columns: repeat(auto-fill, 56px);
  grid-gap: 8px;
}

label {
  display: block;
  font-size: 14px;
  line-height: 16px;
  font-weight: 700;
  text-transform: uppercase;
}

p {
  margin: 0;
}

.lowercase {
  text-transform: lowercase;
}

.result-number {
  color: var(--color-primary);
  font-size: 64px;
  line-height: 64px;
}

.job {
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 48px;
  line-height: 48px;
  font-weight: 300;
  min-height: 0; /* needed to make flex item shrink smaller than content size */
}

.job__content {
  width: 100%;
  height: 100%;
  min-width: 32px;
  max-width: 80px;
  max-height: 48px;
  fill: var(--color-dark);
}

.tube {
  position: relative;
  background: var(--color-light);
  border: 2px solid var(--color-dark);
  border-radius: 8px;
  z-index: 0;
}

.tube--large {
  border-radius: 16px;
}

.tube--primary {
  border-color: var(--color-primary);
}

/* 
 * This pseudo element breaks up the top and bottom borders of the parent element,
 * creating a tube-like appearance.
 */
.tube::before {
  content: "";
  display: block;
  position: absolute;
  top: -2px;
  bottom: -2px;
  left: 8px;
  right: 8px;
  background: var(--color-light);
  z-index: -1;
}

.tube--large::before {
  left: 16px;
  right: 16px;
}

.select.tube::before {
  right: 30px;
}

.number-input.tube::before {
  right: 14px;
}

.tube--bottom::before {
  border-bottom: 2px solid var(--color-secondary);
  transition-property: border-color;
  transition-duration: 150ms;
  transition-timing-function: ease-in-out;
}

.machine {
  flex-grow: 1;
  display: flex;
  flex-flow: column nowrap;
}

.barplot {
  display: grid;
  grid-auto-flow: column;
  align-items: end;
  grid-gap: 32px;
}

.select {
  height: 32px;
}

.select select {
  /* 
   * This element overflows its container by 2px on top and bottom.
   * This is because we want the clickable area to include the borders, and to
   * make the options display underneath the border.
  */
  width: 100%;
  height: 32px;
  margin: -2px 0;
  padding-left: 8px;
  padding-right: 30px;
  color: var(--color-dark);
  background: none;
  border: none;
  outline: none;
  /* hide the default arrow */
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

option {
  /* Options shouldn't be styled */
  color: initial;
}

.select__arrow {
  position: absolute;
  right: 10px;
  top: 8px;
  width: 12px;
  height: 12px;
  fill: var(--color-dark);
  pointer-events: none;
}

.select:focus-within.tube--bottom::before,
.number-input:focus-within.tube--bottom::before {
  border-color: var(--color-primary);
}

.number-input {
  width: 56px;
  height: 32px;
}

.number-input input[type="number"] {
  width: 100%;
  height: 32px;
  margin: -2px 0;
  padding-left: 8px;
  padding-right: 14px;
  color: var(--color-dark);
  border: none;
  background: none;
  outline: none;
  /* hide the default arrows (Firefox only) */
  -moz-appearance: textfield;
}

/* hide the default arrows (Webkit only) */
.number-input input[type="number"]::-webkit-outer-spin-button,
.number-input input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.number-input__arrows {
  position: absolute;
  right: 4px;
  top: 6px;
  width: 8px;
  height: 16px;
  fill: var(--color-dark);
  cursor: default;
}

.number-input__buttons {
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  width: 14px;
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: center;
  fill: var(--color-dark);
}

.number-input__button {
  width: 14px;
  height: 14px;
  padding: 0;
  background: none;
  border: none;
  outline: none;
}
